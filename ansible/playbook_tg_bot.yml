- name: Installs
  hosts: host1, host2
  become: true
  tasks:
    - name: PostgreSQL
      apt:
        name:
         - postgresql
         - postgresql-contrib
         - python3-pip
         - python3-dev
         - python3-venv
         - python3-psycopg2
        state: present

    - name: Install privs to PostgreSQL
      file:
        path: /var/log/postgresql/postgresql-{{ postgres_version }}-main.log
        owner: postgres
        group: adm
        mode: "0644"

    - name: dir for rep
      file:
        path: /archive/
        state: directory
        owner: postgres
        group: postgres
        mode: '0755'
      when: inventory_hostname == 'host1'

    - name: start PostgreSQL
      systemd:
        name: postgresql
        state: started

    - name: db to passwd
      postgresql_pg_hba:
        dest: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
        contype: host
        databases: all
        method: password
        users: all
        address: all
        create: true
      become: true
      become_user: postgres
      notify: Restart PostgreSQL
      when: inventory_hostname == 'host1'

    - name: connect to repl
      postgresql_pg_hba:
        dest: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
        contype: host
        databases: replication
        method: trust
        users: all
        address: "{{postgres_slave_host}}"
        create: true
      become: true
      become_user: postgres
      notify: Restart PostgreSQL
      when: inventory_hostname == 'host1'

  handlers:
    - name: Restart PostgreSQL
      become: true
      systemd:
        name: postgresql
        state: restarted


- name: host1
  hosts: host1
  tasks:

    - name: new user for repl
      become: true
      become_user: postgres
      postgresql_user:
        name: replication
        password: replication
        role_attr_flags: SUPERUSER,REPLICATION
        login_password: postgres
      become: true
      become_user: postgres

    - name: new user and pass
      postgresql_user:
        name: db_user
        password: db_user
        encrypted: yes
      become: true
      become_user: postgres

    - name: new db
      ansible.builtin.postgresql_db:
        name: "db_bot"
        state: present
      become: yes
      become_user: postgres

    - name: Emails
      ansible.builtin.postgresql_query:
        db: "db_bot"
        query: |
          CREATE TABLE IF NOT EXISTS emails (
            id SERIAL PRIMARY KEY,
            email VARCHAR(50) NOT NULL
          )
      become: yes
      become_user: postgres

    - name: PhoneNumbers
      ansible.builtin.postgresql_query:
        db: "db_bot"
        query: |
          CREATE TABLE IF NOT EXISTS phonenumbers (
            id SERIAL PRIMARY KEY,
            phone_number VARCHAR(20) NOT NULL
          )
      become: yes
      become_user: postgres

    - name: db repl
      ansible.builtin.postgresql_privs:
        database: db_bot
        role: db_user
        obj: emails,phonenumbers
        priv: ALL
        state: present
      become: yes
      become_user: postgres

    - name: phonenumbers_id_seq
      ansible.builtin.postgresql_query:
        db: db_bot
        query: "GRANT USAGE, SELECT ON SEQUENCE phonenumbers_id_seq TO db_user;"
      become: yes
      become_user: postgres

    - name: emails_id_seq
      ansible.builtin.postgresql_query:
        db: db_bot
        query: "GRANT USAGE, SELECT ON SEQUENCE emails_id_seq TO db_user;"
      become: yes
      become_user: postgres

    - name: master
      lineinfile:
        path: /etc/postgresql/{{ postgres_version }}/main/postgresql.conf
        line: "{{ item }}"
      loop:
        - "wal_level = replica"
        - "max_wal_senders = 10"
        - "wal_log_hints = on"
        - "archive_mode = on"
        - "archive_command = 'cp %p /archive/%f'"
        - "listen_addresses = '*'"
      become: true
      become_user: postgres

    - name: slot for repl
      command: "psql -U postgres -c \"SELECT * FROM pg_create_physical_replication_slot('replication_slot');\""
      become: true
      become_user: postgres
      ignore_errors: yes

    - name: pg_wal
      file:
        path: /var/lib/postgresql/{{ postgres_version_2 }}/main/pg_wal
        state: directory
        owner: postgres
        group: postgres
        mode: '0750'
      become: yes
      become_user: postgres

    - name: restart postgres
      systemd:
        name: postgresql
        state: restarted
      become: true


- name: host2
  hosts: host2
  tasks:

    - name: conf
      lineinfile:
        path: /etc/postgresql/{{ postgres_version_2 }}/main/postgresql.conf
        line: "{{ item }}"
      loop:
        - "listen_addresses = '*'"
      become: true
      become_user: postgres

    - name: delete dir
      ansible.builtin.file:
        state: "{{ item }}"
        path: "/var/lib/postgresql/data/"
        owner: postgres
        group: postgres
        mode: 0750
      with_items:
        - absent
        - directory
      become: yes
      become_user: postgres

    - name: start repl
      command: pg_basebackup --pgdata=/var/lib/postgresql/data/ -R --slot=replication_slot --host={{ postgres_master_host }} --port={{ postgres_master_port }} -U replication -w -P
      become: true
      become_user: postgres

    - name: restart postgres
      systemd:
        name: postgresql
        state: restarted
      become: true


- name: bot
  hosts: host3
  become: true
  tasks:
    - name: install packets
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip
        - python3-psycopg2
        - wget

    - name: install modules
      pip:
        name: "{{ item }}"
        state: present
      loop:
        - paramiko
        - python-telegram-bot==13.7
        - python-dotenv
        - requests

    - name: for bot
      ansible.builtin.file:
        state: "{{ item }}"
        path: /home/bot
        owner: ans1
        group: ans1
        mode: 0755
      with_items:
        - absent
        - directory
      become: yes

    - name: bot.py from github
      command: wget https://raw.githubusercontent.com/Mainacx/for_pt/docker/bot/bot.py -P /home/bot
      become: true

    - name: privs
      ansible.builtin.file:
        path: /home/bot/bot.py
        owner: ans1
        group: ans1
        mode: '0755'
      become: true

    - name: copy .env
      copy:
        src: .env
        dest: /home/bot/.env
        force: yes
        owner: ans1
        group: ans1
        mode: '0755'
      become: true

    - name: bot.py
      shell: "nohup python3 bot.py > /dev/null 2>&1 &"
      args:
        chdir: /home/bot
      become: true
